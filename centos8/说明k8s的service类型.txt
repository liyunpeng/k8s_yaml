首先， 为什么要有service,  因为pod可能会出现重启，发生了ip地址发生了变化， 这就需要有个对外的一个代理， 在客户看来， 这个代理是不变的， 不管你后面的东西怎么变， 代理是不变得，计算机世界的客户和现实的客户都有这样的需求，公司里的换了， 但对于客户来京， 还和以前一样业务来往。所以这就是代理存在的意义了。  在k8s中，这个代理对客户来讲，太想一个真正的服务了，所以干脆就叫service了。  这个service内部有个kube-proxy, 做反向代理， 代理放在了服务端，就叫反向代理， service除了代理还有别的东西，比如endpoint

servide有4中类型， 基本是按着对外形式划分的， 
1. clusterIp方式， clusterip有两种， 如果内部的pod是无状态的， 就分配一个固定的ip， 内部pod ip变化了，service的这个ip也不会变，如果pod是由状态的， 就不会分配ip,  kube-proxy也不做反向代理了， 用dns直接找到后端的pod。 这种方式， 集群外部都不能访问service.

2. nodeport方式， service会映射到宿主机的一个端口上， k8s集群外部可以通过宿主机ip加端口，直接访问到这个服务， 

3.loadbance方式， 向公有云申请一个负载均衡器，  集群外部可以通过负载均衡器访问到本集群里的服务

4.  externname方式， 集群外部的服务纳入到k8s集群内部， 如mysql
