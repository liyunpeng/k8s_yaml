pod的command 运行都是在容器初始化后立即运行的。kubectl logs 可以打印命令吐出的Log。
pod_busybox.yaml
apiVersion: v1
kind: Pod
metadata:
  name: busybox
  namespace: default
spec:
  containers:
  - name: busybox
    image: busybox:1.28.4
    command: [ "/bin/sh", "-c", "env" ]  # env命令打印出所有的环境变量
    imagePullPolicy: IfNotPresent
  restartPolicy: Never

$ kubectl logs busybox
KUBERNETES_PORT=tcp://10.96.0.1:443
MYAPP_SVC_PORT_80_TCP_ADDR=10.99.200.8
KUBERNETES_SERVICE_PORT=443
INGRESS_NGINX_PORT_80_TCP_ADDR=10.103.69.200
HOSTNAME=busybox
MYAPP_SVC_PORT_80_TCP_PORT=80
MYAPP_SVC_PORT_80_TCP_PROTO=tcp
SHLVL=1
INGRESS_NGINX_PORT_80_TCP_PORT=80
HOME=/root
INGRESS_NGINX_PORT_80_TCP_PROTO=tcp
MYAPP_SVC_PORT_80_TCP=tcp://10.99.200.8:80
INGRESS_NGINX_PORT_80_TCP=tcp://10.103.69.200:80
INGRESS_NGINX_PORT_443_TCP_ADDR=10.103.69.200
INGRESS_NGINX_PORT_443_TCP_PORT=443
MYSQL_PORT_3306_TCP_ADDR=10.96.173.212
INGRESS_NGINX_PORT_443_TCP_PROTO=tcp
KUBERNETES_PORT_443_TCP_ADDR=10.96.0.1
MYAPP_SVC_SERVICE_PORT_HTTP=80
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
MYSQL_PORT_3306_TCP_PORT=3306
KUBERNETES_PORT_443_TCP_PORT=443
INGRESS_NGINX_SERVICE_PORT_HTTP=80
MYSQL_PORT_3306_TCP_PROTO=tcp
MYSQL_SERVICE_HOST=10.96.173.212
KUBERNETES_PORT_443_TCP_PROTO=tcp
INGRESS_NGINX_PORT_443_TCP=tcp://10.103.69.200:443
MYAPP_SVC_SERVICE_HOST=10.99.200.8
INGRESS_NGINX_SERVICE_PORT_HTTPS=443
INGRESS_NGINX_SERVICE_HOST=10.103.69.200
MYSQL_SERVICE_PORT=3306
MYSQL_PORT=tcp://10.96.173.212:3306
KUBERNETES_PORT_443_TCP=tcp://10.96.0.1:443
KUBERNETES_SERVICE_PORT_HTTPS=443
MYSQL_PORT_3306_TCP=tcp://10.96.173.212:3306
KUBERNETES_SERVICE_HOST=10.96.0.1
PWD=/
MYAPP_SVC_SERVICE_PORT=80
MYAPP_SVC_PORT=tcp://10.99.200.8:80
INGRESS_NGINX_SERVICE_PORT=80
INGRESS_NGINX_PORT=tcp://10.103.69.200:80

====================================================================================
pod的command修改，不能成功apply， 比如
pod_busybox.yaml里面的
command: [ "/bin/sh", "-c", "env" ]
改为
command: [ "/bin/sh", "-c", "env | grep APP" ]
这个命令是在容器初始好后立即运行的， apply 的时候，初始化早已经结束了，不具备执行这个command的条件，
所以更新这个pod会报如下错误：
$ kubectl apply -f pod_busybox.yaml
The Pod "busybox" is invalid: spec: Forbidden: pod updates may not change fields other than `spec.containers[*].image`, `spec.initContainers[*].image`, `spec.activeDeadlineSeconds` or `spec.tolerations` (only additions to existing tolerations)
  core.PodSpec{
        Volumes:        []core.Volume{{Name: "default-token-ck48w", VolumeSource: core.VolumeSource{Secret: &core.SecretVolumeSource{SecretName: "default-token-ck48w", DefaultMode: &420}}}},
        InitContainers: nil,
        Containers: []core.Container{
                {
                        Name:  "busybox",
                        Image: "busybox:1.28.4",
                        Command: []string{
                                "/bin/sh",
                                "-c",
-                               "env | grep APP",
+                               "env",
                        },
                        Args:       nil,
                        WorkingDir: "",
                        ... // 16 identical fields
                },
        },
        RestartPolicy:                 "Never",
        TerminationGracePeriodSeconds: &30,
        ... // 21 identical fields
  }

