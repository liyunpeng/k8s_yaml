以HTTPS的安全架构来理解私钥，公钥，摘要算法，CA公钥在加解密和数字签名的作用
先明确一下，对于RSA算法来说，公钥加密，那么私钥就可以解密。私钥加密，那么公钥就可以解密。
服务器拥有RSA私钥，用该私钥生成一个RSA公钥，把这个公钥发给客户端。 客户端发给服务器的数据都是RSA公钥加密后的，只有服务器的RSA私钥能解密。
保证客户端数据不被其他机器盗取服务器发给客户端的是明文加签名，用签名保证客户得到的明文数据不是被其他机器篡改后的. 

客户端                                                                 服务器
RSA公钥加密         ------------------传送的数据---------------->       RSA私钥解密


对原文作SHA256                                                         对原文作SHA256
得到HASH串1                                                            得到HASH串
RSA公钥解密签名     <-----------------传送的数据-----------------        RSA私钥对HASH串加密
得到HASH串2                                                            得到数字签名
比较两个串                                                                                         
相等即签名验证成功 
                                                                                    
   正常情况下 客户端得到的公钥都是目标服务器给的， 但是也有可能攻击者机器给这个客户一个公钥，
   这样客户发送的加密数据都可以都攻击者解密出来。 这就是客户收到假公钥的危害。 
   为了防止客户收到假公钥， 设立一个证书颁发机构，简称CA，客户端只接受CA给的公钥，不会接受服务器给的公钥。 
   CA的做法是， 收到服务器发来的公钥， CA用自己的私钥对这个公钥做数字签名，以保证这个公钥不会被篡改。 
   CA一方面确保了发给服务器是真的， 一方面确保了CA所发出的公钥不会被篡改。 这样保证了客户收到的是真公钥。
-----------   
   关于根证书： 网上答案
   所谓根证书，是CA认证中心与用户建立信任关系的基础，用户的数字证书必须有一个受信任的根证书，用户的数字证书才是有效的。从技术上讲，证书其实包含三部分，用户的信息，用户的公钥，还有CA中心对该证书里面的信息的签名，要验证一份证书的真伪（即验证CA中心对该证书信息的签名是否有效），需要用CA中心的公钥验证，而CA中心的公钥存在于对这份证书进行签名的证书内，故需要下载该证书，但使用该证书验证又需先验证该证书本身的真伪，故又要用签发该证书的证书来验证，这样一来就构成一条证书链的关系，这条证书链在哪里终结呢？答案就是根证书，根证书是一份特殊的证书，它的签发者是它本身，下载根证书就表明您对该根证书以下所签发的证书都表示信任，而技术上则是建立起一个验证证书信息的链条，证书的验证追溯至根证书即为结束。所以说用户在使用自己的数字证书之前必须先下载根证书。
