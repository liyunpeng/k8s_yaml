查看镜像
user1@ubuntu:~$ sudo docker images 
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
ubuntu              latest              a2a15febcdf3        4 weeks ago         64.2MB
hello-world         latest              fce289e99eb9        8 months ago        1.84kB

在镜像上创建容器并启动， run是创建容器加启动容器，-i表示交互, -t表示终端
user1@ubuntu:~$ sudo docker run -it --name docker3 ubuntu bash
root@133b58ff16bb:/#     // 133b58ff16bb表示在容器中

启动已经存在的容器， 要用id 启动
user1@ubuntu:~$ sudo docker start e2bfe689d80289f1c72ee7f7d0f317fc1b21c923fdc8ad7718ba573d406ffc53  -i
有-i能进入交互模式
user1@ubuntu:~$ sudo docker stop e2bfe689d80289f1c72ee7f7d0f317fc1b21c923fdc8ad7718ba573d406ffc53

列出当前启动的容器
user1@ubuntu:~$ sudo docker container  ls
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
e2bfe689d802        ubuntu              "bash"              7 hours ago         Up 2 minutes                            docker1

启动容器，可以用短id启动
user1@ubuntu:~$ sudo docker start -i e2bfe689d802
root@e2bfe689d802:/# 

user1@ubuntu:~$ sudo docker stop  e2bfe689d802


容器和宿主机共享数据卷
user1@ubuntu:~$ sudo docker volume ls
DRIVER              VOLUME NAME
local               v1

user1@ubuntu:~$ sudo docker volume inspect v1
[
    {
        "CreatedAt": "2019-09-14T02:30:28-07:00",
        "Driver": "local",
        "Labels": {},
        "Mountpoint": "/var/snap/docker/common/var-lib-docker/volumes/v1/_data",
        "Name": "v1",
        "Options": {},
        "Scope": "local"
    }
]
docker 创建的数据卷是在宿主机下的， 所以/var/snap/docker/common/var-lib-docker/volumes/v1/_data是宿主机的目录

挂载数据卷必须在创建容器时， v1:/data1，/data1是容器中的目录， 这个目录如果镜像里不存在，就会在容器启动时创建 这些参数的顺序不要写错
user1@ubuntu:~$ sudo docker run -it -v v1:/tmp --name docker5 ubuntu bash
root@affe9358ee9d:/# touch /tmp/a   

在宿主机里可以看到这个在容器中创建的a, 实现了宿主机和容器的文件共享
user1@ubuntu:~$ sudo ls /var/snap/docker/common/var-lib-docker/volumes/v1/_data/ -l
total 0
-rw-r--r-- 1 root root 0 Sep 14 03:03 a

